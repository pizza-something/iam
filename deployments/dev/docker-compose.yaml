name: iam

x-services:
  backend: &backend
    image: iam-backend:dev
    build:
      context: ../../
      dockerfile: deployments/dev/backend/Dockerfile
      tags:
        - "iam-backend:dev"
    volumes:
      - ../..:/app
      - backend-data:/run/app
    depends_on:
      postgres:
        condition: service_healthy
      kafka:
        condition: service_healthy
    environment:
      JWT_SECRET: super-secret-jwt-secret
      POSTGRES_URL: postgresql+psycopg://root:root@postgres/root
      KAFKA_URL: kafka:9092

services:
  fastapi:
    <<: *backend
    container_name: iam-fastapi
    command: python src/iam/entrypoint/fastapi
    ports:
      - 8000:8000

  faststream-consumer:
    <<: *backend
    container_name: iam-faststream-consumer
    command: faststream run iam.entrypoint.faststream.app:app --reload

  faststream-docs:
    <<: *backend
    container_name: iam-faststream-docs
    command: faststream docs serve iam.entrypoint.faststream.app:app --host 0.0.0.0 --port 8008 --reload
    ports:
      - 8008:8008

  postgres:
    image: postgres:16.3-alpine3.19
    container_name: iam-postgres
    labels:
      deployment: dev
    volumes:
      - postgres-data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: root
      POSTGRES_USER: root
      POSTGRES_PASSWORD: root
    healthcheck:
      test: pg_isready -d root -U root
      start_period: 1m
      start_interval: 1s
      interval: 5s

  kafka:
    image: bitnami/kafka:3.9.0
    container_name: iam-kafka
    labels:
      deployment: dev
    environment:
      KAFKA_CFG_NODE_ID: 0
      KAFKA_CFG_PROCESS_ROLES: controller,broker
      KAFKA_CFG_LISTENERS: PLAINTEXT://:9092,CONTROLLER://:9093
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: 0@kafka:9093
      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: CONTROLLER
    volumes:
      - kafka-data:/bitnami/kafka
    healthcheck:
      test: kafka-topics.sh --list --bootstrap-server kafka:9092
      start_period: 1m
      start_interval: 1s
      interval: 5s

volumes:
  backend-data: null

  postgres-data:
    labels:
      db: true

  kafka-data:
    labels:
      db: true
